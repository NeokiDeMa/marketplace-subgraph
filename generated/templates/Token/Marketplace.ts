// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BuyItem extends ethereum.Event {
  get params(): BuyItem__Params {
    return new BuyItem__Params(this);
  }
}

export class BuyItem__Params {
  _event: BuyItem;

  constructor(event: BuyItem) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get listedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class DeleteItem extends ethereum.Event {
  get params(): DeleteItem__Params {
    return new DeleteItem__Params(this);
  }
}

export class DeleteItem__Params {
  _event: DeleteItem;

  constructor(event: DeleteItem) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class NewListing extends ethereum.Event {
  get params(): NewListing__Params {
    return new NewListing__Params(this);
  }
}

export class NewListing__Params {
  _event: NewListing;

  constructor(event: NewListing) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get nftContract(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class UpdateItemAmount extends ethereum.Event {
  get params(): UpdateItemAmount__Params {
    return new UpdateItemAmount__Params(this);
  }
}

export class UpdateItemAmount__Params {
  _event: UpdateItemAmount;

  constructor(event: UpdateItemAmount) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newListedAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateItemPrice extends ethereum.Event {
  get params(): UpdateItemPrice__Params {
    return new UpdateItemPrice__Params(this);
  }
}

export class UpdateItemPrice__Params {
  _event: UpdateItemPrice;

  constructor(event: UpdateItemPrice) {
    this._event = event;
  }

  get itemId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newPrice(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class UpdateMarketplaceFee extends ethereum.Event {
  get params(): UpdateMarketplaceFee__Params {
    return new UpdateMarketplaceFee__Params(this);
  }
}

export class UpdateMarketplaceFee__Params {
  _event: UpdateMarketplaceFee;

  constructor(event: UpdateMarketplaceFee) {
    this._event = event;
  }

  get sender(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): i32 {
    return this._event.parameters[1].value.toI32();
  }
}

export class Marketplace__getAllItemsResultValue0Struct extends ethereum.Tuple {
  get itemId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get nftContract(): Address {
    return this[5].toAddress();
  }
}

export class Marketplace__getAllUserListingsResultValue0Struct extends ethereum.Tuple {
  get itemId(): BigInt {
    return this[0].toBigInt();
  }

  get tokenId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get nftContract(): Address {
    return this[5].toAddress();
  }
}

export class Marketplace__marketItemResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: Address;
  value5: Address;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: Address,
    value5: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getItemId(): BigInt {
    return this.value0;
  }

  getTokenId(): BigInt {
    return this.value1;
  }

  getAmount(): BigInt {
    return this.value2;
  }

  getPrice(): BigInt {
    return this.value3;
  }

  getOwner(): Address {
    return this.value4;
  }

  getNftContract(): Address {
    return this.value5;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  CHANGE_FEE_ROLE(): Bytes {
    let result = super.call(
      "CHANGE_FEE_ROLE",
      "CHANGE_FEE_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_CHANGE_FEE_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "CHANGE_FEE_ROLE",
      "CHANGE_FEE_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  FOUNDATION_ROLE(): Bytes {
    let result = super.call(
      "FOUNDATION_ROLE",
      "FOUNDATION_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_FOUNDATION_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "FOUNDATION_ROLE",
      "FOUNDATION_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  MARKETPLACE_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "MARKETPLACE_ADMIN_ROLE",
      "MARKETPLACE_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_MARKETPLACE_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "MARKETPLACE_ADMIN_ROLE",
      "MARKETPLACE_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  foundation(): Address {
    let result = super.call("foundation", "foundation():(address)", []);

    return result[0].toAddress();
  }

  try_foundation(): ethereum.CallResult<Address> {
    let result = super.tryCall("foundation", "foundation():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getAllItems(): Array<Marketplace__getAllItemsResultValue0Struct> {
    let result = super.call(
      "getAllItems",
      "getAllItems():((uint256,uint256,uint256,uint256,address,address)[])",
      []
    );

    return result[0].toTupleArray<Marketplace__getAllItemsResultValue0Struct>();
  }

  try_getAllItems(): ethereum.CallResult<
    Array<Marketplace__getAllItemsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllItems",
      "getAllItems():((uint256,uint256,uint256,uint256,address,address)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__getAllItemsResultValue0Struct>()
    );
  }

  getAllUserListings(
    owner: Address
  ): Array<Marketplace__getAllUserListingsResultValue0Struct> {
    let result = super.call(
      "getAllUserListings",
      "getAllUserListings(address):((uint256,uint256,uint256,uint256,address,address)[])",
      [ethereum.Value.fromAddress(owner)]
    );

    return result[0].toTupleArray<
      Marketplace__getAllUserListingsResultValue0Struct
    >();
  }

  try_getAllUserListings(
    owner: Address
  ): ethereum.CallResult<
    Array<Marketplace__getAllUserListingsResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllUserListings",
      "getAllUserListings(address):((uint256,uint256,uint256,uint256,address,address)[])",
      [ethereum.Value.fromAddress(owner)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Marketplace__getAllUserListingsResultValue0Struct>()
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  listingFee(): i32 {
    let result = super.call("listingFee", "listingFee():(uint16)", []);

    return result[0].toI32();
  }

  try_listingFee(): ethereum.CallResult<i32> {
    let result = super.tryCall("listingFee", "listingFee():(uint16)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  marketItem(param0: BigInt): Marketplace__marketItemResult {
    let result = super.call(
      "marketItem",
      "marketItem(uint256):(uint256,uint256,uint256,uint256,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new Marketplace__marketItemResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toAddress(),
      result[5].toAddress()
    );
  }

  try_marketItem(
    param0: BigInt
  ): ethereum.CallResult<Marketplace__marketItemResult> {
    let result = super.tryCall(
      "marketItem",
      "marketItem(uint256):(uint256,uint256,uint256,uint256,address,address)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__marketItemResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toAddress(),
        value[5].toAddress()
      )
    );
  }

  nftSold(): BigInt {
    let result = super.call("nftSold", "nftSold():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nftSold(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("nftSold", "nftSold():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nko(): Address {
    let result = super.call("nko", "nko():(address)", []);

    return result[0].toAddress();
  }

  try_nko(): ethereum.CallResult<Address> {
    let result = super.tryCall("nko", "nko():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  stakingPool(): Address {
    let result = super.call("stakingPool", "stakingPool():(address)", []);

    return result[0].toAddress();
  }

  try_stakingPool(): ethereum.CallResult<Address> {
    let result = super.tryCall("stakingPool", "stakingPool():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  totalSoledItems(): BigInt {
    let result = super.call(
      "totalSoledItems",
      "totalSoledItems():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_totalSoledItems(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalSoledItems",
      "totalSoledItems():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _foundation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _stakingPool(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _nko(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _admin(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddMyListingItemAmountCall extends ethereum.Call {
  get inputs(): AddMyListingItemAmountCall__Inputs {
    return new AddMyListingItemAmountCall__Inputs(this);
  }

  get outputs(): AddMyListingItemAmountCall__Outputs {
    return new AddMyListingItemAmountCall__Outputs(this);
  }
}

export class AddMyListingItemAmountCall__Inputs {
  _call: AddMyListingItemAmountCall;

  constructor(call: AddMyListingItemAmountCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _addingAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class AddMyListingItemAmountCall__Outputs {
  _call: AddMyListingItemAmountCall;

  constructor(call: AddMyListingItemAmountCall) {
    this._call = call;
  }
}

export class BuyItemCall extends ethereum.Call {
  get inputs(): BuyItemCall__Inputs {
    return new BuyItemCall__Inputs(this);
  }

  get outputs(): BuyItemCall__Outputs {
    return new BuyItemCall__Outputs(this);
  }
}

export class BuyItemCall__Inputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class BuyItemCall__Outputs {
  _call: BuyItemCall;

  constructor(call: BuyItemCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class ListItemCall extends ethereum.Call {
  get inputs(): ListItemCall__Inputs {
    return new ListItemCall__Inputs(this);
  }

  get outputs(): ListItemCall__Outputs {
    return new ListItemCall__Outputs(this);
  }
}

export class ListItemCall__Inputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }

  get _nft(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _price(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get data(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class ListItemCall__Outputs {
  _call: ListItemCall;

  constructor(call: ListItemCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class RemoveMyListingItemAmountCall extends ethereum.Call {
  get inputs(): RemoveMyListingItemAmountCall__Inputs {
    return new RemoveMyListingItemAmountCall__Inputs(this);
  }

  get outputs(): RemoveMyListingItemAmountCall__Outputs {
    return new RemoveMyListingItemAmountCall__Outputs(this);
  }
}

export class RemoveMyListingItemAmountCall__Inputs {
  _call: RemoveMyListingItemAmountCall;

  constructor(call: RemoveMyListingItemAmountCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _removeAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RemoveMyListingItemAmountCall__Outputs {
  _call: RemoveMyListingItemAmountCall;

  constructor(call: RemoveMyListingItemAmountCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdateFoundationCall extends ethereum.Call {
  get inputs(): UpdateFoundationCall__Inputs {
    return new UpdateFoundationCall__Inputs(this);
  }

  get outputs(): UpdateFoundationCall__Outputs {
    return new UpdateFoundationCall__Outputs(this);
  }
}

export class UpdateFoundationCall__Inputs {
  _call: UpdateFoundationCall;

  constructor(call: UpdateFoundationCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateFoundationCall__Outputs {
  _call: UpdateFoundationCall;

  constructor(call: UpdateFoundationCall) {
    this._call = call;
  }
}

export class UpdateListingFeeCall extends ethereum.Call {
  get inputs(): UpdateListingFeeCall__Inputs {
    return new UpdateListingFeeCall__Inputs(this);
  }

  get outputs(): UpdateListingFeeCall__Outputs {
    return new UpdateListingFeeCall__Outputs(this);
  }
}

export class UpdateListingFeeCall__Inputs {
  _call: UpdateListingFeeCall;

  constructor(call: UpdateListingFeeCall) {
    this._call = call;
  }

  get amount(): i32 {
    return this._call.inputValues[0].value.toI32();
  }
}

export class UpdateListingFeeCall__Outputs {
  _call: UpdateListingFeeCall;

  constructor(call: UpdateListingFeeCall) {
    this._call = call;
  }
}

export class UpdateMyListingItemPriceCall extends ethereum.Call {
  get inputs(): UpdateMyListingItemPriceCall__Inputs {
    return new UpdateMyListingItemPriceCall__Inputs(this);
  }

  get outputs(): UpdateMyListingItemPriceCall__Outputs {
    return new UpdateMyListingItemPriceCall__Outputs(this);
  }
}

export class UpdateMyListingItemPriceCall__Inputs {
  _call: UpdateMyListingItemPriceCall;

  constructor(call: UpdateMyListingItemPriceCall) {
    this._call = call;
  }

  get _itemId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newPrice(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class UpdateMyListingItemPriceCall__Outputs {
  _call: UpdateMyListingItemPriceCall;

  constructor(call: UpdateMyListingItemPriceCall) {
    this._call = call;
  }
}

export class UpdateStakingPoolCall extends ethereum.Call {
  get inputs(): UpdateStakingPoolCall__Inputs {
    return new UpdateStakingPoolCall__Inputs(this);
  }

  get outputs(): UpdateStakingPoolCall__Outputs {
    return new UpdateStakingPoolCall__Outputs(this);
  }
}

export class UpdateStakingPoolCall__Inputs {
  _call: UpdateStakingPoolCall;

  constructor(call: UpdateStakingPoolCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateStakingPoolCall__Outputs {
  _call: UpdateStakingPoolCall;

  constructor(call: UpdateStakingPoolCall) {
    this._call = call;
  }
}

export class UpdateTokenAddressCall extends ethereum.Call {
  get inputs(): UpdateTokenAddressCall__Inputs {
    return new UpdateTokenAddressCall__Inputs(this);
  }

  get outputs(): UpdateTokenAddressCall__Outputs {
    return new UpdateTokenAddressCall__Outputs(this);
  }
}

export class UpdateTokenAddressCall__Inputs {
  _call: UpdateTokenAddressCall;

  constructor(call: UpdateTokenAddressCall) {
    this._call = call;
  }

  get newAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateTokenAddressCall__Outputs {
  _call: UpdateTokenAddressCall;

  constructor(call: UpdateTokenAddressCall) {
    this._call = call;
  }
}
